<%- include('top') %>
<!-- <script type="text/javascript">
	// Require login to see this page.
	app.auth.forceLogin()
</script> -->

<!-- <script src="/static/lib/js/hterm_all.js"></script> -->
<script src="/static-modules/ace-builds/src-noconflict/ace.js"></script>

<link rel="stylesheet" href="static-modules/xterm/css/xterm.css" />
<script src="static-modules/xterm/lib/xterm.js"></script>
<script src="static-modules/xterm-addon-fit/lib/xterm-addon-fit.js"></script>
<script src="static-modules/xterm-addon-attach/lib/xterm-addon-attach.js"></script>

<style type="text/css">

	.actionMessage{
		position: absolute;
		z-index: 10000000;
		width: 100%;
	}

	dev.card-body {
		padding: 0 !important;
	}

	.codeland-col {
		padding-bottom: 1em;
	}

	#codeland-card {
		height: 100%;

	}

	#editor {
/*		background-color: blue;*/
		height: 100%;
		margin: 0;
		top: 50px;
		top: 0;
		left: 0;
/*	    width: 50%;
		display: inline-block;*/
	}

	#codeland-results {
		background-color: darkgrey;
		height: 100%;
		margin-bottom: 0;
/*	    top: 50px;
		top: 0;
		right: 0;*/
/*	    width: 50%;
		float: right;
		display: inline-block;*/
/*	    overflow: scroll;*/*/
	}


</style>

<script type="text/javascript">
	const interpreters = {
		'sh': 'echo "${code_in_base64}" | base64 --decode | bash',
		'python': 'echo "${code_in_base64}" | base64 --decode | python3',
		'javascript': 'echo "${code_in_base64}" | base64 --decode | node',
		'c_ccp': 'echo "${code_in_base64}" | base64 --decode | gcc -xc -o run1 - && ./run1',
		'php': "echo \"${code_in_base64}\" | base64 --decode | php",
		"powershell": "echo \"${code_in_base64}\" | base64 --decode | pwsh -NonInteractive",
		"lua": "echo \"${code_in_base64}\" | base64 --decode | lua",
		"markdown": "echo \"${code_in_base64}\" | base64 --decode | pandoc -f markdown -t html",
		"rust": "echo \"${code_in_base64}\" | base64 --decode | rustc -o run1 - && ./run1",
		"perl": "echo \"${code_in_base64}\" | base64 --decode | perl",

		"brainfuck": "echo \"${code_in_base64}\" | base64 --decode > /tmp/br.run; bf /tmp/br.run",



	}

	function parseCode(code, language){
		return interpreters[language].replace('${code_in_base64}', btoa(code))
	}

	var editor;
	var currentLanguage = 'sh';

	$(document).ready(function(){

		editor = ace.edit($('#editor')[0]);
		// ace.require('ace/ext/settings_menu').init(editor);
		ace.require("ace/ext/language_tools");
		// editor.$blockScrolling = Infinity;
		editor.setFontSize(16);
		editor.setTheme("ace/theme/monokai");
		editor.getSession().setMode("ace/mode/sh");
		editor.setKeyboardHandler("ace/keyboard/sublime");

		editor.setShowInvisibles(true);

		editor.setOptions({
			enableBasicAutocompletion: true,
			enableSnippets: true,
			enableLiveAutocompletion: true
		});

		// editor.commands.addCommands([
		//     {
		//         name: "showSettingsMenu",
		//         bindKey: {
		//             win: "Ctrl-q",
		//             mac: "Ctrl-q"
		//         },
		//         exec: function (editor) {
		//             editor.showSettingsMenu();
		//         },
		//         readOnly: true
		//     }
		// ]);


		term = new Terminal();
		const fitAddon = new FitAddon.FitAddon()
		term.loadAddon( fitAddon );
		term.open(document.getElementById('codeland-results'));
		fitAddon.fit()
		

		$(window).resize(function(){
		  fitAddon.fit()
		});

		$editorSettings = $('.clodelandSettings');
		$spinner = $('#workerStatus');
		$results = $('#codeland-results');
		$codelandKeyboardSelect = $('#codelandKeyboardSelect');
		$codelandLanguageSelect = $('#codelandLanguageSelect');

		function updateDropDown(value, $elelemt){
			let text;
			$elelemt.find('a.dropdown-item').each(function(index){
				let $this = $(this)
				if($this.attr('value') === value){
					$this.addClass('active');
					text = $this.html()
				}else{
					$this.removeClass('active')
				}
			});

			$($elelemt.find('button.dropdown-toggle')[0]).html(text)

			return !!text;
		}

		function updateURL(key, value){
			let hash = new URLSearchParams(window.location.hash.replace(/^\#/, ''));
			hash.set(key, value);

			window.location.hash = hash.toString();
		}

		const urlMap = {
			language: updateLanguage,
			keyboard: updateKeybpard,
			code:updatCode
		};

		function parseHash(){
			for (const [key, value] of new URLSearchParams(window.location.hash.replace(/^\#/, ''))) {
				if(urlMap[key]) urlMap[key](value, false)
			}
		}

		parseHash();

		function updateKeybpard(keyboard, appendURL=true){
			if(updateDropDown(keyboard, $codelandKeyboardSelect)){
			console.log('here')
				editor.setKeyboardHandler(`ace/keyboard/${keyboard}`);
				if(appendURL) updateURL('keyboard', keyboard);
			}
		}

		function updateLanguage(language, appendURL=true){
			if(updateDropDown(language, $codelandLanguageSelect)){
				editor.getSession().setMode(`ace/mode/${language}`);
				currentLanguage = language;
				if(appendURL) updateURL('language', language);
			}
		}

		function updatCode(code, appendURL){
			code = atob(code)
			editor.setValue(code)
		}

		function setCode(code){
			code = btoa(code)
			updateURL('language', currentLanguage)
			updateURL('code', code)
		}

		$('#share').on('click', function(){
			setCode(editor.getValue());
		})

		$('#execute').on('click', function(){
			term.clear()
			$('.results-buttons').find('button').each(function(){
				$(this).addClass('disabled')
			})
			$editorSettings.hide()
			$spinner.show()
			app.util.actionMessage(`
				Executing...
				<div class="spinner-border float-right" role="status">
					<span class="sr-only">Loading...</span>
				</div>
			`, $('#codeland-results'), 'warning')
			
			app.codeland.persistentRun(`export TERM=xterm-256color; ${parseCode(editor.getValue(), currentLanguage)}`, (err, data)=>{
				$editorSettings.show()
				$spinner.hide()
				
				if(err){
					console.log(err, data)
					let message = (data && data.message) || err.message || err;
					app.util.actionMessage(`Runner failed with error: <b>${message}</b>`, $('#codeland-results'), 'danger')
					return;
				}
				app.util.actionMessage('', $('#codeland-results'))

				for(let line of data.res.split('\n')){
					term.writeln(line)
				}

				$.scope.runInformation.update(data)
				$('.results-buttons').find('button').each(function(){
					$(this).removeClass('disabled')
				})

			})
		});

		$codelandKeyboardSelect.on('click', 'a.dropdown-item', function(event){
			updateKeybpard($(this).attr('value'))
		});

		$codelandLanguageSelect.on('click', 'a.dropdown-item', function(event){
			updateLanguage($(this).attr('value'))
		});

	});
</script>
<div class="row" style="height: 100%; display: none;">
	<div class="codeland-col col-md-6" style="height: 100%;">
		<div id="codeland-card" class="card shadow-lg">
			<nav class="card-header navbar navbar-dark bg-dark">
				<a class="navbar-brand">
					<i class="fa-solid fa-code"></i>
					Editor
				</a>
				<div class="d-inline">
					<div id="workerStatus" class="spinner-grow spinner-grow-sm text-success" role="status" style="display:none">
						<span class="sr-only">Loading...</span>
					</div>

						<button id="share" class="btn btn-outline-success btn-sm clodelandSettings">
							<i class="fa-solid fa-share-from-square"></i>
							Share
						</button>

						<div id="codelandKeyboardSelect" class="btn-group clodelandSettings">
							<button class="btn btn-outline-light btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="false">
								<img src="/static/svg/sublime-text.svg" height="16px" /> Sublime
							</button>
							<div class="dropdown-menu">
								<a class="dropdown-item active" value="sublime"><img src="/static/svg/sublime-text.svg" height="16px" /> Sublime</a>
								<a class="dropdown-item" value="vscode"><img src="/static/svg/vscode.svg" height="16px" /> VS Code</a>
							</div>
						</div>

						<div id="codelandLanguageSelect" class="btn-group clodelandSettings">
							<button class="btn btn-outline-light btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="false">
								<img src="/static/svg/bash.svg" height="16px" /></i> Bash
							</button>
							<div class="dropdown-menu">
								<a class="dropdown-item active" value="sh"><img src="/static/svg/bash.svg" height="16px" /></i> Bash</a>
								<a class="dropdown-item" value="powershell"><img src="/static/svg/PowerShell.svg" height="16px" /></i> PowerShell</a>
								<a class="dropdown-item" value="perl"><img src="/static/svg/lua.svg" height="16px" /> Perl</a>
								<a class="dropdown-item" value="php"><img src="/static/svg/php.svg" height="16px" /></i> php</a>
								<a class="dropdown-item" value="javascript"><i class="fa-brands fa-node-js"></i> JavaScript</a>
								<a class="dropdown-item" value="python"><i class="fa-brands fa-python"></i> Python</a>
								<a class="dropdown-item" value="c_cpp"><i class="fa-solid fa-c"></i> c/c++</a>
								<a class="dropdown-item" value="rust"><i class="fa-brands fa-rust"></i> Rust</a>
								<a class="dropdown-item" value="lua"><img src="/static/svg/lua.svg" height="16px" /></i> Lua</a>
								<a class="dropdown-item" value="markdown"><i class="fa-brands fa-markdown"></i> Markdown</a>



								<a class="dropdown-item" value="brainfuck"><i class="fa-solid fa-brain"></i> Brianfuck</a>
							</div>
						</div>

					<button id="execute" class="btn btn-outline-success btn-sm clodelandSettings">
						<i class="fa-solid fa-play"></i>
						Run!
					</button>
				</div>
				
			</nav>

			<div class="card-header actionMessage" style="display: none;"></div>
			<div class="card-body" style="padding: 0">
				<div id="editor"></div>
			</div>
		
		</div>
	</div>

	<div class="codeland-col col-md-6" style="height: 100%;">
		<div id="codeland-card" class="card shadow-lg">

				<nav class="card-header navbar navbar-dark bg-dark">
					<a class="navbar-brand">
						<i class="fa-solid fa-terminal"></i>
						Results
					</a>
					<div class="results-buttons d-inline">

						<button class="disabled btn btn-outline-light btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="false">
							<i class="fa-solid fa-circle-info"></i>
							Information
						</button>
						<div class="dropdown-menu">
							<ul class="list-group list-group-flush" jq-repeat="runInformation">
								<li class="list-group-item py-1">
									Runner: <b>{{runner}}</b>
								</li>
								<li class="list-group-item py-1">
									Duration: <b>{{duration}}</b><i>ms</i>
								</li>
							</ul>
						</div>

						<button id="clear" class="disabled btn btn-outline-success btn-sm">
							<i class="fa-solid fa-eraser"></i>
							Clear
						</button>

					</div>
					
				</nav>

			<div class="card-body" style="padding: 0">
			<div class="card-header actionMessage" style="display: none;"></div>

				<div id="codeland-results">
				</div>

			</div>
		
		</div>
	</div>
</div>
<%- include('bottom') %>

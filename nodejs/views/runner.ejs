<%- include('top') %>
<style type="text/css">
	div.card-body.jq-repeat-workerInfomation > ul > li.list-group-item{
		padding: 2px;
	}
</style>
<script type="text/javascript">

	function formatBytes(bytes, decimals = 2) {
	    if (!+bytes) return '0 Bytes'

	    const k = 1024
	    const dm = decimals < 0 ? 0 : decimals
	    const sizes = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']

	    const i = Math.floor(Math.log(bytes) / Math.log(k))

	    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`
	}

	function parseMemory(memory){
		
		for(let [key, value] of Object.entries(memory)){

			if(key.includes('percent')){
				memory[`${key}Floor`] = Math.floor(value);
				continue;
			}
			memory[key] = formatBytes(value)
		}
		memory.percenfreeDiff = memory.percentAvailable - memory.percentFree;

		return memory;
	}

	let runnerStatusMap = {
		available: 'primary',
		inUse: 'warning',
		execute: 'success',
		error: 'danger',
		stopped: 'secondary',
	}


	function runnerStatus(runner, status){
		if(!runnerStatusMap[status]) status = 'error';
		let $el = $(`#runner-${runner}`);
		// console.log('runnerStatus', )
		$el.removeClass (function (index, className) {
		    return (className.match (/(^|\s)list-group-item-\S+/g) || []).join(' ');
		});

		if(status === 'complete') status = 'inUse';

		$el.addClass(`list-group-item-${runnerStatusMap[status]}`)
	}

	$(document).ready(function(){
		$.scope.runnerAvailable.__index = 'name';
		$.scope.runnerInUse.__index = 'name';

		//   // set up animation for adding to taks list
		// $.scope.runnerAvailable.__put = function(){
		//     this.fadeIn( 'slow' );
		// };

		// // set up animation for removing taks from list
		// $.scope.runnerAvailable.__take = function(){
		// 	this.slideUp( 'slow', function(){
		// 		this.remove();
		// 	});
		// };

		// // set up animation for adding to taks list
		// $.scope.runnerInUse.__put = function(){
		//     this.slideDown( 'slow' );
		// };

		// // set up animation for removing taks from list
		// $.scope.runnerInUse.__take = function(){
		// 	this.slideUp( 'slow', function(){
		// 		this.remove();
		// 	});
		// };

		app.api.get('runner', function(err, data){
			$.scope.workerInfomation.push({memory: parseMemory(data.memory)});
			for(runner of data.runners){
				if(runner.lastStatus !== 'available'){
					$.scope.runnerInUse.push(runner)
				}else{
					$.scope.runnerAvailable.push(runner)
				}
				runnerStatus(runner.name, runner.lastStatus)
			}
		});

		app.subscribe('cl:worker:runner:status:available', function(data, topic){
			// console.log(topic, data)
			$.scope.runnerAvailable.push({name: data.runner})
		});

		app.subscribe('cl:worker:runner:status:inUse', function(data, topic){
			// console.log(topic, data)
			$.scope.runnerAvailable.splice(data.runner, 1)
			// console.log('inUse', data.runner, topic.split(':')[4])
			if($.scope.runnerInUse.indexOf(data.runner) === -1) $.scope.runnerInUse.push({name: data.runner})
			runnerStatus(data.runner, topic.split(':')[4])
		});

		app.subscribe('cl:worker:runner:free:success', function(data, topic){
			// console.log(topic, data)
			setTimeout((data, topic)=>{
				$.scope.runnerInUse.splice(data.runner, 1)
				$.scope.runnerAvailable.splice(data.runner, 1)
			}, 30000, data, topic)
		});


		app.subscribe('cl:worker:runner:status:complete', function(data, topic){
			data.durationHuman = moment.duration(data.duration).humanize();
			$.scope.runnerInUse.update(data.runner, data);
		});

		app.subscribe(/^cl:worker:runner:status:/, function(data, topic){
			topic = topic.split(':')
			// console.log(data.runner, topic[4])
			runnerStatus(data.runner, topic[4])
			$.scope.workerInfomation.update(0, {runners:data})

		})

		app.subscribe(/^cl:worker:runner:fill:/, function(data, topic){
				topic = topic.split(':')
				// console.log(topic[4], data)
				$.scope.workerInfomation.update(0, {
					...data,
					status: topic[4]
				})	
		})

		app.subscribe('cl:worker:memory', function(data, topic){
			// console.log(topic, data)
			$.scope.workerInfomation.update(0, {memory: parseMemory(data)});
		});

		app.subscribe('cl:worker:df', function(data, topic){
			data = {
				df: {
					filesystem: data.filesystem,
					used: formatBytes(data.used),
					total: formatBytes(data.total),
					available: formatBytes(data.available),
					percentUsed: data['use%'],
				}
			}

			$.scope.workerInfomation.update(0, data);
		});
	});
</script>
<div class="row" style="display:none">

	<div class="col-md-4">
		<div class="card shadow-lg" jq-repeat="workerInfomation">
			<div class="card-header">
				<i class="fas fa-layer-plus"></i>
				Worker Information
			</div>
			<div class="card-header actionMessage" style="display:none"></div>
			<div class="card-body">

				<h4 class="card-title">Memory</h4>
				<ul class="list-group list-group-flush">
					<li class="list-group-item list-group-item-primary">
						 Total: <b>{{memory.total}}</b> 
					</li>
					<li class="list-group-item list-group-item-danger">
						 Used: <b >{{memory.used}} {{memory.percentUsedFloor}}%</b> 
					</li>
					<li class="list-group-item list-group-item-success">
						 Available: <b>{{memory.available}} {{memory.percentAvailableFloor}}%</b>
					</li>
					<li class="list-group-item list-group-item-warning">
						 Free: <b>{{memory.free}} {{memory.percentFreeFloor}}%</b>
					</li>
				</ul>

				<br />
				<div class="progress">
				  <div class="progress-bar bg-danger" role="progressbar" style="width: {{memory.percentUsed}}%" aria-valuenow="{{memory.percentUsed}}" aria-valuemin="0" aria-valuemax="100"></div>
				  <div class="progress-bar bg-success" role="progressbar" style="width: {{memory.percenfreeDiff}}%" aria-valuenow="{{memory.percenfreeDiff}}" aria-valuemin="0" aria-valuemax="100"></div>
				  <div class="progress-bar bg-warning" role="progressbar" style="width: {{memory.percentFree}}%" aria-valuenow="{{memory.percentFree}}" aria-valuemin="0" aria-valuemax="100"></div>
				</div>
					
				<hr />

				<h4 class="card-title">Disk /</h4>
				<p class="card-text">
					<span> Total: <b>{{df.total}}</b> </span> <br/>
					<span> Used: <b>{{df.used}}</b> </span> <br/>
					<div class="progress">
					  <div class="progress-bar" role="progressbar"
					  	style="width: {{df.percentUsed}}%;"
					  	aria-valuenow="{{df.percentUsed}}" aria-valuemin="0"
					  	aria-valuemax="100">
					  		{{df.percentUsed}}%
					  </div>
					</div>
				</p>

				<hr />

				<h4 class="card-title">Runner oven</h4>
				<p class="card-text">
					<span> Cooking: <b>{{runnersCooking}}</b> </span> <br/>
					<span> Available: <b>{{AvailableRunners}}</b> </span> <br/>
					<span> Status: <b>{{status}}</b> </span> <br/>
					<span> Message: <b>{{message}}</b> </span> <br/>
				</p>

			</div>
		
		</div>
	</div>

	<div class="col-md-4">
		<div class="card shadow-lg">
			<div class="card-header">
				<i class="fas fa-layer-plus"></i>
				Available
			</div>
			<div class="card-header actionMessage" style="display:none"></div>
			<div class="card-body">

				<ul class="list-group">
					<li id="runner-{{name}}" jq-repeat="runnerAvailable" class="list-group-item list-group-item-primary" style="display:none">
						{{name}}
					</li>
				</ul>

			</div>
		</div>
	</div>

	<div class="col-md-4">
		<div class="card shadow-lg">
			<div class="card-header">
				<i class="fas fa-layer-plus"></i>
				In use
			</div>
			<div class="card-header actionMessage" style="display:none"></div>
			<div class="card-body">

				<ul class="list-group">
					<li id="runner-{{name}}" jq-repeat="runnerInUse" class="list-group-item list-group-item-warning" style="display:none">
						<span>{{name}}</span> <br />
						<span>Execution took {{durationHuman}} <i>({{duration}}ms)</i></span>
					</li>
				</ul>

			</div>
		</div>

		<br />
		
		<div class="card shadow-lg">
			<div class="card-header">
				<i class="fas fa-layer-plus"></i>
				Runner History
			</div>
			<div class="card-header actionMessage" style="display:none"></div>
			<div class="card-body">
				<h1> Coming soon! </h1>
				<ul class="list-group">
					<li id="runner-{{name}}" jq-repeat="runnerHisory" class="list-group-item list-group-item-success" style="display:none">
						{{name}}
					</li>
				</ul>

			</div>
		</div>
	</div>





</div>
<%- include('bottom') %>
